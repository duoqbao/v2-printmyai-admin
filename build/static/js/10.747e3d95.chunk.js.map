{"version":3,"sources":["api/upload.js","components/UpLoad/index.js","api/product.js","pages/Products/ChangeSize.js","pages/Products/ModalSale.js","pages/Products/index.js"],"names":["dataURItoBlob","dataURI","byteString","split","indexOf","atob","unescape","mimeString","ia","Uint8Array","length","i","charCodeAt","Blob","type","uploadImage","event","Promise","resolve","reject","Resizer","imageFileResizer","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","uri","formData","data","wrap","_context","prev","next","FormData","append","api","post","concat","API_URL","sent","t0","stop","_x","apply","arguments","isUrl","str","RegExp","test","UploadInput","props","setData","uploadFile","_props$title","title","_props$isInput","isInput","_useState","useState","_useState2","_slicedToArray","loading","setLoading","useEffect","uploadButton","_jsxs","children","_jsx","PlusOutlined","style","marginTop","Row","gutter","className","Col","span","hidden","Input","value","onChange","e","url","target","onChangeUrl","Upload","name","listType","showUploadList","beforeUpload","file","accept","Spin","spinning","width","height","backgroundImage","backgroundRepeat","backgroundSize","cursor","getList","id","get","creted","body","getAllBlueprint","update","put","delete","getPrintProvider","getVariantsByProvider","productId","printProviderId","getProductBySales","toggleSale","priceSale","salePrice","ChangeSize","setDataVariants","idProvider","variants","basePrice","_useState3","_useState4","open","setOpen","_useState5","_useState6","hexColor","setHexColor","_useState7","_useState8","_useState9","_useState10","isCheckColor","setIsCheckColor","convertData","products","groupedBySize","Object","entries","reduce","result","product","color","options","push","map","_ref2","list","_defineProperty","_objectSpread","sizes","temp","_toConsumableArray","item","getData","_ref4","res","ProductApi","console","log","Select","index","Option","Popover","content","SketchPicker","onChangeComplete","newColor","hex","trigger","onOpenChange","newOpen","prefix","backgroundColor","borderRadius","c","_c$options","existed","filter","s","SizeAndPriceOptions","defaultPrice","price","defaultChecked","size","listSize","checkedItem","checked","removeDuplicate","removed","_ref5","_useState11","parseFloat","_useState12","setValue","_useState13","_useState14","setChecked","alignItems","display","justifyContent","Checkbox","defaultValue","disabled","onBlur","ModalSale","isOpen","setItem","handleSaleUpdate","setSalePrice","number","Modal","visible","onCancel","onOk","Number","message","error","toString","replace","onKeyPress","key","match","preventDefault","removeEmptyFields","obj","prop","undefined","Products","_productAdd$printProv","_productAdd$printProv2","_productAdd$printProv3","params","useParams","setProduct","listBluePrint","setListBulePrint","listModal","setListModal","isVisible","setIsVisible","setIsInput","types","setTypes","_useState15","_useState16","productAdd","setProductAdd","_useState17","_useState18","inputSearch","setInputSearch","_useState19","_useState20","printProvider","setPrintProvider","_useState21","_useState22","loadingModalAdd","setLoadingModalAdd","_useState23","_useState24","isOnSale","setIsOnSale","_useState25","_useState26","sale","setSale","getAllBlueprints","res_1","Product","_callee2","uniqueArr","_context2","self","document","columns","dataIndex","render","Image","src","Button","onClick","formattedNumber","addProduct","_ref3","_callee3","_context3","abrupt","_id","success","onCloseAddProduct","_callee4","_context4","_callee5","_context5","handleOnSales","_ref6","_callee6","_context6","onSale","_x2","_ref7","_callee7","indexProduct","_context7","findIndex","_x3","_x4","tempData","image","xs","Card","bordered","padding","sm","md","lg","xl","_Fragment","Tooltip","placement","minHeight","minWidth","background","Typography","fontWeight","toFixed","textDecoration","InfoCircleFilled","class","ghost","danger","_tempProduct$provider","_tempProduct$provider2","_tempProduct$provider3","_tempProduct$provider4","tempProduct","providerOther","information","providerUS","Popconfirm","onConfirm","_callee8","_context8","Empty","footer","zIndex","Search","newList","toUpperCase","includes","Table","dataSource","pagination","okText","then","catch","err","AutoComplete","popupClassName","dropdownMatchSelectWidth","filterOption","inputValue","option","onSelect","placeholder","input","_option$label","label","optionFilterProp","showSearch","find","_temp$location","_temp$location2","_temp$location3","address","location","address1","address2","provider","_provider$location","_provider$location2","_provider$location3","_provider$location4","city"],"mappings":"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","file":"static/js/10.747e3d95.chunk.js","sourcesContent":["import api from \"axios\";\nimport { API_URL } from \"./index.js\";\nimport Resizer from \"react-image-file-resizer\";\nexport const dataURItoBlob = (dataURI) => {\n  var byteString;\n  if (dataURI.split(\",\")[0].indexOf(\"base64\") >= 0)\n    byteString = atob(dataURI.split(\",\")[1]);\n  else byteString = unescape(dataURI.split(\",\")[1]);\n\n  var mimeString = dataURI.split(\",\")[0].split(\":\")[1].split(\";\")[0];\n\n  var ia = new Uint8Array(byteString.length);\n  for (var i = 0; i < byteString.length; i++) {\n    ia[i] = byteString.charCodeAt(i);\n  }\n\n  return new Blob([ia], { type: mimeString });\n};\nexport const uploadImage = (event) => {\n  if (event) {\n    return new Promise((resolve, reject) => {\n      Resizer.imageFileResizer(\n        event, // the file from input\n        1920,\n        1080,\n        \"PNG\", // compress format WEBP, JPEG, PNG\n        90, // quality\n        0, // rotation\n        async (uri) => {\n          try {\n            let formData = new FormData();\n            const dataURI = dataURItoBlob(uri);\n            formData.append(\"file\", dataURI);\n            const data = await api.post(`${API_URL}/upload`, formData);\n            resolve(data.data);\n          } catch (err) {\n            reject(err);\n          }\n        },\n        \"base64\" //\n      );\n    });\n  }\n};\n","import React, { useState, useEffect } from \"react\";\nimport { Upload, Row, Col, Input, Spin } from \"antd\";\nimport { LoadingOutlined, PlusOutlined } from \"@ant-design/icons\";\nimport \"./index.scss\"\nfunction isUrl(str) {\n  const pattern = new RegExp(\n    \"^(https?:\\\\/\\\\/)?\" + // protocol\n      \"((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.)+[a-z]{2,}|\" + // domain name\n      \"((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))\" + // OR ip (v4) address\n      \"(\\\\:\\\\d+)?(\\\\/[-a-z\\\\d%_.~+]*)*\" + // port and path\n      \"(\\\\?[;&a-z\\\\d%_.~+=-]*)?\" + // query string\n      \"(\\\\#[-a-z\\\\d_]*)?$\",\n    \"i\"\n  ); // fragment locator\n  return !!pattern.test(str);\n}\nexport default function UploadInput(props) {\n  const { data, setData, uploadFile, title = \"Url\", isInput = false } = props;\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    // getDataById(id);\n    setLoading(false);\n  }, [data]);\n  const beforeUpload = (file) => {\n    setLoading(true);\n    uploadFile(file);\n  };\n  const uploadButton = (\n    <div>\n      <PlusOutlined />\n      <div\n        style={{\n          marginTop: 8,\n        }}\n      >\n        Upload\n      </div>\n    </div>\n  );\n  const onChangeUrl = (e) => {\n    const url = e.target.value;\n    setData(url);\n  };\n  return (\n    <Row gutter={[24, 24]} className=\"UploadInput\">\n      <Col span={12} hidden={isInput}>\n        <div className=\"input\">\n          <label>{title}</label>\n          <Input value={data} onChange={(e) => onChangeUrl(e)} />\n        </div>\n      </Col>\n      <Col span={isInput ? 24 : 12}>\n        <Upload\n          name=\"avatar\"\n          listType={data && isUrl(data) ? \"text\" : \"picture-card\"}\n          className=\"avatar-uploader\"\n          showUploadList={false}\n          beforeUpload={beforeUpload}\n          accept=\"image/*\"\n        >\n          <Spin spinning={loading}>\n            {data && isUrl(data) ? (\n              <div\n                className=\"card-credit img-hover\"\n                style={{\n                  width: \"20rem\",\n                  height: \"11em\",\n                  backgroundImage: `url(${data})`,\n                  backgroundRepeat: \"no-repeat\",\n                  backgroundSize: \"contain\",\n                  cursor: \"pointer\",\n                }}\n              />\n            ) : (\n              uploadButton\n            )}\n          </Spin>\n        </Upload>\n      </Col>\n    </Row>\n  );\n}\n","import api from \"./index\";\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default {\n  getList: (id) => {\n    return api.get(`/ecommerc/products/${id}/`);\n  },\n  creted: (id, body) => {\n    return api.post(`/ecommerc/products/${id}`, body);\n  },\n  getAllBlueprint: () => {\n    return api.get(\"ecommerc/products/blueprints\");\n  },\n  update: (id, body) => {\n    return api.put(`/ecommerc/products/${id}/detail`, body);\n  },\n  delete: (id) => {\n    return api.delete(`/ecommerc/products/${id}/detail`);\n  },\n  getPrintProvider: (id) => {\n    return api.get(`/ecommerc/products/${id}/print-providers`);\n  },\n  getVariantsByProvider: (productId, printProviderId) => {\n    return api.get(\n      `/ecommerc/products/${productId}/print-providers/${printProviderId}/variants`\n    );\n  },\n  getProductBySales: () => {\n    return api.get(`/ecommerc/products/on-sale`);\n  },\n  toggleSale: (priceSale, id) => {\n    return api.put(`/ecommerc/products/${id}/sale`, { salePrice: priceSale });\n  },\n};\n","import React, { useEffect, useState } from \"react\";\nimport {\n  Checkbox,\n  Divider,\n  Row,\n  Col,\n  Spin,\n  Select,\n  Popover,\n  Input,\n  Button,\n} from \"antd\";\nimport { SketchPicker } from \"react-color\";\n\nimport ProductApi from \"api/product\";\nimport convert from \"color-convert\";\n\nimport \"./index.scss\";\n\nexport default function ChangeSize(props) {\n  const { id, setDataVariants, idProvider, variants, basePrice } = props;\n  const [data, setData] = useState([]);\n  const [open, setOpen] = useState(false);\n\n  const [hexColor, setHexColor] = useState(\"#000\");\n  const [loading, setLoading] = useState(false);\n  const [isCheckColor, setIsCheckColor] = useState(false);\n  const onChange = (item, listSize) => {\n    let sizes = variants.sizes;\n    let checkedItem = listSize.filter((s) => s.id == item.id)[0];\n    if (item.checked) {\n      let removeDuplicate = sizes.filter((s) => s.id != item.id);\n      let result = [...removeDuplicate, { ...checkedItem, price: item.price }];\n      setDataVariants({ ...variants, sizes: result });\n    } else {\n      let removed = sizes.filter((s) => s.id != item.id);\n      setDataVariants({ ...variants, sizes: removed });\n    }\n  };\n  const convertData = (products) => {\n    const groupedBySize = Object.entries(\n      products.reduce((result, product) => {\n        const color = product.options.color;\n        if (!result[color]) {\n          result[color] = [];\n        }\n        result[color].push(product);\n        return result;\n      }, {})\n    ).map(([color, list]) => ({\n      color: color,\n      list: list,\n      [`${color}ed`]: [],\n    }));\n    if (groupedBySize.length === 1 && groupedBySize[0].color === \"undefined\") {\n      setIsCheckColor(true);\n      setDataVariants({\n        ...variants,\n        color: \"undefined\",\n      });\n    }\n    if (variants.sizes && variants.sizes.length > 0) {\n      const temp = [...groupedBySize];\n      temp.map((item) => {\n        if (item.color === variants.color) {\n          item[`${item.color}ed`] = variants.sizes;\n        }\n        return {\n          ...item,\n        };\n      });\n      setData(temp);\n      // setDataVariants(temp);\n    } else {\n      setData(groupedBySize);\n      // setDataVariants(groupedBySize);\n    }\n  };\n\n  const getData = async () => {\n    setLoading(true);\n    try {\n      if (id && idProvider) {\n        const res = await ProductApi.getVariantsByProvider(id, idProvider);\n        if (res) {\n          convertData(res.variants);\n        }\n        setLoading(false);\n      }\n    } catch (error) {\n      setLoading(false);\n    }\n  };\n  const handleOpenChange = (newOpen) => {\n    setOpen(newOpen);\n  };\n\n  useEffect(() => {}, [variants]);\n\n  useEffect(() => {\n    getData();\n    setHexColor(variants.hexColor);\n  }, [idProvider]);\n\n  console.log(data);\n  return (\n    <Spin spinning={loading}>\n      <div className=\"product\">\n        <Row gutter={[12, 12]}>\n          <Col span={12} className=\"mb-24\" hidden={isCheckColor}>\n            <div className=\"input\">\n              <label>Color</label>\n              <Select\n                style={{ width: \"100%\" }}\n                value={variants.color}\n                onChange={(e) => {\n                  let hex = \"000\";\n                  // if (e.split(\" \").length > 1) {\n                  //   const temp = e.split(\" \");\n                  //   hex = convert.keyword.hex(temp[1].toLowerCase());\n                  //   setHexColor(`#${hex}`);\n                  // } else {\n                  //   hex = convert.keyword.hex(e);\n                  // }\n                  setHexColor(`#${hex}`);\n                  setDataVariants({\n                    ...variants,\n                    color: e,\n                    hexColor: `#${hex}`,\n                  });\n                }}\n              >\n                {data.map((item, index) => {\n                  return (\n                    <Select.Option key={index} value={item.color}>\n                      {item.color}\n                    </Select.Option>\n                  );\n                })}\n              </Select>\n            </div>\n          </Col>\n          <Col span={12} className=\"mb-24\" hidden={isCheckColor}>\n            <div className=\"input\">\n              <label>Color Hex:</label>\n              <Popover\n                content={\n                  <SketchPicker\n                    color={hexColor}\n                    onChangeComplete={(newColor) => {\n                      setHexColor(newColor.hex);\n                      setDataVariants({ ...variants, hexColor: newColor.hex });\n                    }}\n                  />\n                }\n                trigger=\"click\"\n                open={open}\n                onOpenChange={handleOpenChange}\n              >\n                <Input\n                  className=\"customHeightInput\"\n                  value={hexColor}\n                  prefix={\n                    <div\n                      style={{\n                        backgroundColor: `${hexColor}`,\n                        width: 24,\n                        height: 24,\n                        borderRadius: \"50%\",\n                      }}\n                    ></div>\n                  }\n                />\n              </Popover>\n            </div>\n          </Col>\n          <Col span={24} hidden={!variants.color && !isCheckColor}>\n            <div className=\"input\">\n              <label>Size</label>{\" \"}\n              <div>\n                {data.map((item, index) => {\n                  return (\n                    <div\n                      key={item.color}\n                      hidden={variants.color !== item.color}\n                    >\n                      {item.list.map((c) => {\n                        let { sizes } = variants;\n                        let existed = sizes.filter((s) => s.id == c.id)[0];\n                        return (\n                          <SizeAndPriceOptions\n                            id={c.id}\n                            item={c}\n                            defaultPrice={existed?.price || basePrice}\n                            defaultChecked={existed}\n                            size={c?.options?.size}\n                            onChange={(e) => {\n                              onChange(e, item.list);\n                            }}\n                          />\n                        );\n                      })}\n                    </div>\n                  );\n                })}\n              </div>\n            </div>\n          </Col>\n        </Row>\n      </div>\n    </Spin>\n  );\n}\n\nconst SizeAndPriceOptions = ({\n  id,\n  onChange,\n  size,\n  defaultPrice,\n  defaultChecked,\n}) => {\n  const [value, setValue] = useState({\n    id: null,\n    price: parseFloat(defaultPrice),\n  });\n  const [checked, setChecked] = useState(defaultChecked);\n  return (\n    <div\n      style={{\n        marginTop: 10,\n        alignItems: \"center\",\n        display: \"flex\",\n        justifyContent: \"flex-start\",\n      }}\n    >\n      <Checkbox\n        value={value.id}\n        checked={checked}\n        onChange={() => {\n          setChecked((prev) => !prev);\n          onChange({ id, price: parseFloat(value.price), checked: !checked });\n        }}\n        style={{ width: 100 }}\n      >\n        {size}\n      </Checkbox>\n      <Input\n        type={\"number\"}\n        prefix=\"$\"\n        onChange={(e) => {\n          setValue({ ...value, price: parseFloat(e.target.value) });\n        }}\n        defaultValue={value.price}\n        value={value.price}\n        disabled={!checked}\n        onBlur={() => {\n          if (checked)\n            onChange({ id, price: parseFloat(value.price), checked });\n        }}\n        style={{ width: 200 }}\n      />\n    </div>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport { Modal, Input, message } from \"antd\";\nexport default function ModalSale(props) {\n  const { isOpen, item, setOpen, setItem, handleSaleUpdate } = props;\n  const [salePrice, setSalePrice] = useState(0);\n  useEffect(() => {\n    setSalePrice(0);\n  }, [isOpen, item]);\n  const isNumber = (e) => {\n    if (e.key.match(/[^0-9.]/g)) {\n      e.preventDefault();\n    } else if (e.target.value.indexOf(\".\") !== -1 && e.key === \".\") {\n      // If there is already a dot and the user types another dot, prevent it\n      e.preventDefault();\n    } else if (e.target.value.split(\".\").length > 1 && e.key === \".\") {\n      // If there is already one dot and the user types another digit after the dot, allow it\n      return true;\n    } else if (\n      e.target.value.split(\".\").length > 1 &&\n      e.target.value.split(\".\")[1].length === 2\n    ) {\n      // Only allow two decimal places\n      e.preventDefault();\n    } else {\n      return true;\n    }\n  };\n  const formattedNumber = (number) => {\n    return number\n      ? number.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\n      : \"\";\n  };\n  const submitSale = () => {\n    if (Number(salePrice) > 100) {\n      message.error(`Price Sale can in range 0-100 %`);\n      return;\n    }\n    if (Number(salePrice) < 0) {\n      message.error(\"Price Sale cannot be less than 0\");\n      return;\n    }\n    handleSaleUpdate(parseFloat(salePrice), item);\n  };\n  return (\n    <Modal\n      visible={isOpen}\n      onCancel={() => {\n        setItem({});\n        setOpen(false);\n      }}\n      onOk={submitSale}\n    >\n      <div className=\"input\">\n        <label>Price Sales</label>\n        <Input\n          value={formattedNumber(salePrice || 0)}\n          onKeyPress={isNumber}\n          // max={100}\n          // min={0}\n          prefix=\"%\"\n          onChange={(e) => {\n            const value = e.target.value;\n            setSalePrice(value.replace(/,/g, \"\"));\n          }}\n        />\n      </div>\n    </Modal>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport {\n  Row,\n  Col,\n  Card,\n  Spin,\n  Image,\n  Modal,\n  Input,\n  Table,\n  Button,\n  AutoComplete,\n  message,\n  Popconfirm,\n  Empty,\n  Select,\n  Tooltip,\n  Typography,\n} from \"antd\";\nimport { useParams } from \"react-router-dom\";\nimport Product from \"api/product\";\nimport Carousel from \"components/Carousel/idnex\";\nimport \"./index.scss\";\nimport ChangeSize from \"./ChangeSize\";\nimport ModalSale from \"./ModalSale\";\nimport UploadInput from \"components/UpLoad\";\nimport { uploadImage } from \"api/upload\";\nimport { InfoCircleFilled } from \"@ant-design/icons\";\nfunction removeEmptyFields(obj) {\n  for (let prop in obj) {\n    if (\n      obj[prop] === null ||\n      obj[prop] === \"\" ||\n      obj[prop] === undefined ||\n      obj[prop].length === 0\n    ) {\n      delete obj[prop];\n    }\n  }\n  return obj;\n}\nexport default function Products() {\n  const params = useParams();\n  const [product, setProduct] = useState([]);\n  const [listBluePrint, setListBulePrint] = useState([]);\n  const [listModal, setListModal] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [isVisible, setIsVisible] = useState(false);\n  const [isInput, setIsInput] = useState(false);\n  const [types, setTypes] = useState([]);\n  const { id } = params;\n  const [productAdd, setProductAdd] = useState({});\n  const [inputSearch, setInputSearch] = useState(\"\");\n  const [printProvider, setPrintProvider] = useState([]);\n  const [loadingModalAdd, setLoadingModalAdd] = useState(false);\n  //const [providerOther, setProviderOther] = useState([]);\n\n  const [isOnSale, setIsOnSale] = useState(false);\n  const [sale, setSale] = useState({});\n  const getAllBlueprints = async () => {\n    const res_1 = await Product.getAllBlueprint();\n    setListBulePrint(res_1);\n    setListModal(res_1);\n  };\n  const getData = async () => {\n    setLoading(true);\n    try {\n      const res = await Product.getList(id);\n      setProduct(res);\n      if (res) {\n        const uniqueArr = res.filter((obj, index, self) => {\n          const types = self.map((obj) => obj.type);\n          return types.indexOf(obj.type) === index;\n        });\n        const temp = uniqueArr?.map((item) => {\n          return {\n            value: item.type,\n          };\n        });\n        setTypes(temp);\n      }\n      setLoading(false);\n    } catch (error) {}\n  };\n  useEffect(() => {\n    document.title = \"Products\";\n    getAllBlueprints();\n    getData();\n  }, [id]);\n  const columns = [\n    {\n      title: \"Product Name\",\n      dataIndex: \"title\",\n      key: \"title\",\n    },\n    {\n      title: \"Brand\",\n      dataIndex: \"brand\",\n      key: \"brand\",\n    },\n    {\n      title: \"Model\",\n      dataIndex: \"model\",\n      key: \"model\",\n    },\n    {\n      title: \"Images\",\n      dataIndex: \"images\",\n      key: \"images\",\n      render: (item = []) => {\n        return (\n          <div>\n            <Image src={item[0]} />\n          </div>\n        );\n      },\n    },\n    {\n      key: \"action\",\n      render: (item) => {\n        return (\n          <div>\n            <Button\n              onClick={() => {\n                setProductAdd(item);\n                getPrintProvider(item.id);\n                setIsInput(true);\n              }}\n              type=\"primary\"\n            >\n              Select\n            </Button>\n          </div>\n        );\n      },\n    },\n  ];\n  const isNumber = (e) => {\n    if (e.key.match(/[^0-9.]/g)) {\n      e.preventDefault();\n    } else if (e.target.value.indexOf(\".\") !== -1 && e.key === \".\") {\n      // If there is already a dot and the user types another dot, prevent it\n      e.preventDefault();\n    } else if (e.target.value.split(\".\").length > 1 && e.key === \".\") {\n      // If there is already one dot and the user types another digit after the dot, allow it\n      return true;\n    } else if (\n      e.target.value.split(\".\").length > 1 &&\n      e.target.value.split(\".\")[1].length === 2\n    ) {\n      // Only allow two decimal places\n      e.preventDefault();\n    } else {\n      return true;\n    }\n  };\n  const formattedNumber = (number) => {\n    return number\n      ? number.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\n      : \"\";\n  };\n  const normalizeDataColor = (data = []) => {\n    const variants = [];\n    data.forEach((item) => {\n      const commonIds = item[`${item.size}ed`].reduce(\n        (accumulator, current) => {\n          if (item.list.some((obj) => obj.id === current)) {\n            accumulator.push(current);\n          }\n          return accumulator;\n        },\n        []\n      );\n      item.list\n        .filter((obj) => commonIds.includes(obj.id))\n        .map((obj) => variants.push({ ...obj }));\n    });\n    return variants;\n  };\n  const addProduct = async () => {\n    if (productAdd.price === \"\" || productAdd.price === null) {\n      message.error(\"Input price is required\");\n      return;\n    }\n    const product = removeEmptyFields(productAdd);\n    try {\n      if (productAdd._id) {\n        const res = await Product.update(productAdd._id, product);\n        message.success(\"Updated product\");\n      } else {\n        const res = await Product.creted(id, product);\n        message.success(\"Created product\");\n      }\n      onCloseAddProduct();\n      getData();\n    } catch (error) {\n      message.error(\"Error creating product\");\n    }\n  };\n  const onCloseAddProduct = async () => {\n    setProductAdd({});\n    setInputSearch(\"\");\n    setIsVisible(false);\n    setIsInput(false);\n    setPrintProvider([]);\n  };\n  const getPrintProvider = async (id) => {\n    try {\n      setLoadingModalAdd(true);\n      const res = await Product.getPrintProvider(id);\n      setPrintProvider(res);\n      setLoadingModalAdd(false);\n    } catch (error) {}\n  };\n  const handleOnSales = async (item) => {\n    if (item.onSale) {\n      handleSaleUpdate(0, item);\n      return;\n    }\n    setSale(item);\n    setIsOnSale(true);\n  };\n  const handleSaleUpdate = async (priceSale, item) => {\n    try {\n      const res = await Product.toggleSale(priceSale, item._id);\n      const indexProduct = product.findIndex(\n        (product) => product._id === item._id\n      );\n      if (indexProduct > -1) {\n        const temp = [...product];\n        temp[indexProduct] = res;\n        setProduct(temp);\n      }\n      message.success(\"Updated successful\");\n      setSale({});\n      setIsOnSale(false);\n    } catch (error) {}\n  };\n  const onChangeUrl = (e) => {\n    const tempData = { ...productAdd };\n    tempData.image = e;\n    setProductAdd(tempData);\n  };\n  const beforeUpload = (event) => {\n    uploadImage(event)\n      .then((res) => {\n        onChangeUrl(res);\n      })\n      .catch((err) => {\n        onChangeUrl(\"\");\n        message.error(\"Failed to upload image\");\n      });\n  };\n  return (\n    <div className=\"layout-styles product\">\n      <Spin spinning={loading}>\n        <Row gutter={[24, 24]}>\n          <Col xs=\"24\" span={24}>\n            <Card\n              bordered={false}\n              className=\"criclebox tablespace mb-24\"\n              title=\"Product by Category\"\n            >\n              <div\n                style={{ display: \"flex\", justifyContent: \"end\", padding: 16 }}\n              >\n                <Button\n                  onClick={() => {\n                    setIsVisible(true);\n                  }}\n                  type=\"primary\"\n                >\n                  Add product\n                </Button>\n              </div>\n              <Row\n                className=\"rowgap-vbox\"\n                gutter={[24, 0]}\n                style={{ padding: 24 }}\n              >\n                {product.length > 0 ? (\n                  product?.map((c, index) => (\n                    <Col\n                      key={index}\n                      xs={24}\n                      sm={24}\n                      md={12}\n                      lg={6}\n                      xl={6}\n                      className=\"mb-24\"\n                    >\n                      <Card bordered={false} className=\"criclebox \">\n                        <div className=\"card\">\n                          {/* <Carousel\n                            style={{ width: \"80%\" }}\n                            images={c.images}\n                          /> */}\n                          <Image\n                            style={{ width: \"230px\", height: \"150px\" }}\n                            src={c.image}\n                          />\n                          <h1>{c.title}</h1>\n                          {c?.onSale && (\n                            <>\n                              <p className=\"price sale\">{`-${\n                                formattedNumber(c.salePrice || 0) || 0\n                              }%`}</p>\n                              <Tooltip\n                                placement=\"left\"\n                                title={\n                                  <div\n                                    style={{\n                                      minHeight: 300,\n                                      minWidth: 200,\n                                      background: \"#fff\",\n                                    }}\n                                  >\n                                    {c.sizes.map((s) => (\n                                      <div\n                                        style={{\n                                          padding: 10,\n                                        }}\n                                      >\n                                        <div\n                                          style={{\n                                            display: \"flex\",\n                                            justifyContent: \"space-between\",\n                                            alignItems: \"center\",\n                                            padding: \"10px 0px\",\n                                          }}\n                                        >\n                                          <Typography\n                                            style={{\n                                              color: \"#333\",\n                                              fontWeight: \"bold\",\n                                            }}\n                                          >\n                                            {s.title} :\n                                          </Typography>\n                                          <Typography\n                                            style={{\n                                              color: \"#bd4040\",\n                                              fontWeight: \"bold\",\n                                            }}\n                                          >\n                                            {parseFloat(\n                                              s?.price\n                                                ? s?.price -\n                                                    s?.price *\n                                                      (c?.salePrice / 100)\n                                                : c.price -\n                                                    c?.price *\n                                                      (c?.salePrice / 100)\n                                            ).toFixed(2)}{\" \"}\n                                            $\n                                          </Typography>\n                                        </div>\n                                        <div\n                                          style={{\n                                            display: \"flex\",\n                                            justifyContent: \"flex-end\",\n                                          }}\n                                        >\n                                          <Typography\n                                            style={{\n                                              fontWeight: \"bold\",\n                                              textDecoration: \"line-through\",\n                                            }}\n                                          >\n                                            {s?.price ? s?.price : c.price} $\n                                          </Typography>\n                                        </div>\n                                      </div>\n                                    ))}\n                                  </div>\n                                }\n                              >\n                                <InfoCircleFilled\n                                  style={{ color: \"#0a5266\" }}\n                                />\n                              </Tooltip>\n                            </>\n                          )}\n                          <p class=\"price\">{`$ ${formattedNumber(\n                            c.price || 0\n                          )}`}</p>\n\n                          <p>{c.type}</p>\n                          <div>\n                            {!c.onSale ? (\n                              <Button\n                                type=\"success\"\n                                onClick={() => handleOnSales(c)}\n                              >\n                                On Sales\n                              </Button>\n                            ) : (\n                              <Button\n                                ghost\n                                danger\n                                onClick={() => handleOnSales(c)}\n                              >\n                                Off Sales\n                              </Button>\n                            )}\n                          </div>\n\n                          <div className=\"button-flex\">\n                            <Button\n                              onClick={() => {\n                                getPrintProvider(c.id);\n                                const tempProduct = { ...c };\n                                tempProduct.providerOther =\n                                  tempProduct?.providerOther?.information?.id;\n                                tempProduct.providerUS =\n                                  tempProduct?.providerUS?.information?.id;\n                                setProductAdd(tempProduct || {});\n                                setIsInput(true);\n                              }}\n                              type=\"warning\"\n                            >\n                              Edit\n                            </Button>\n                            <Popconfirm\n                              title=\"Are you sure ? \"\n                              onConfirm={async () => {\n                                try {\n                                  const res = await Product.delete(c._id);\n                                  message.success(\"Delete Success\");\n                                  getData();\n                                } catch (error) {\n                                  message.error(\"Delete Failed\");\n                                }\n                              }}\n                              onCancel={() => {}}\n                            >\n                              <Button type=\"danger\">Delete</Button>\n                            </Popconfirm>\n                          </div>\n                        </div>\n                      </Card>\n                    </Col>\n                  ))\n                ) : (\n                  <div\n                    style={{\n                      display: \"flex\",\n                      justifyContent: \"center\",\n                      width: \"100%\",\n                    }}\n                  >\n                    <Empty />\n                  </div>\n                )}\n              </Row>\n            </Card>\n          </Col>\n        </Row>\n        <Modal\n          open={isVisible}\n          title=\"Add Product\"\n          width={900}\n          footer={null}\n          onCancel={onCloseAddProduct}\n          zIndex={99}\n        >\n          <div>\n            <div>\n              <Input.Search\n                value={inputSearch}\n                onChange={(e) => {\n                  const value = e.target.value;\n                  const newList = listBluePrint.filter((item) =>\n                    item.title.toUpperCase().includes(value.toUpperCase())\n                  );\n                  setListModal(newList);\n                  setInputSearch(value);\n                }}\n              />\n            </div>\n            <div className=\"layout-styles\">\n              <Row gutter={[24, 24]}>\n                <Col xs=\"24\" xl={24}>\n                  <Card\n                    bordered={false}\n                    className=\"criclebox tablespace mb-24\"\n                    title=\"Table Products\"\n                  >\n                    <div className=\"table-responsive\">\n                      <Table\n                        columns={columns}\n                        dataSource={listModal}\n                        pagination={true}\n                        className=\"ant-border-space\"\n                      />\n                    </div>\n                  </Card>\n                </Col>\n              </Row>\n            </div>\n          </div>\n        </Modal>\n        <Modal\n          title={productAdd._id ? \"Edit Product\" : \"Input Product\"}\n          zIndex={100}\n          visible={isInput}\n          onOk={addProduct}\n          onCancel={() => {\n            setIsInput(false);\n          }}\n          okText={productAdd._id ? \"Save\" : \"Create\"}\n          width={700}\n        >\n          <div className=\"product\">\n            <Row gutter={[12, 12]}>\n              <Col span={24}>\n                <div className=\"input\">\n                  <label>Name</label>\n                  <Input\n                    value={productAdd.title}\n                    onChange={(e) => {\n                      const value = e.target.value;\n                      setProductAdd({ ...productAdd, title: value });\n                    }}\n                  />\n                </div>\n              </Col>\n              <Col span={24}>\n                <UploadInput\n                  data={productAdd.image}\n                  setData={(e) => onChangeUrl(e)}\n                  uploadFile={beforeUpload}\n                />\n              </Col>\n\n              <Col span={24}>\n                <div className=\"input\">\n                  <label>Type</label>\n                  <AutoComplete\n                    popupClassName=\"certain-category-search-dropdown\"\n                    dropdownMatchSelectWidth={250}\n                    style={{ width: \"100%\" }}\n                    options={types}\n                    filterOption={(inputValue, option) =>\n                      option.value\n                        .toUpperCase()\n                        .indexOf(inputValue.toUpperCase()) !== -1\n                    }\n                    onSelect={(e) => setProductAdd({ ...productAdd, type: e })}\n                    onChange={(e) => setProductAdd({ ...productAdd, type: e })}\n                    value={productAdd.type}\n                  >\n                    <Input placeholder=\"input here\" />\n                  </AutoComplete>\n                </div>\n              </Col>\n              <Col span={24}>\n                <div className=\"input\">\n                  <label>Price</label>\n                  <Input\n                    prefix={`$`}\n                    value={formattedNumber(productAdd.price || 0)}\n                    onKeyPress={isNumber}\n                    onChange={(e) => {\n                      const value = e.target.value;\n                      const temp = { ...productAdd };\n                      temp.price = value.replace(/,/g, \"\");\n                      setProductAdd(temp);\n                    }}\n                  />\n                </div>\n              </Col>\n\n              <Col span={24}>\n                <div className=\"input\">\n                  <label>Provider </label>\n                  <Select\n                    style={{ width: \"100%\" }}\n                    value={productAdd?.printProvider?.id}\n                    loading={loadingModalAdd}\n                    filterOption={(input, option) =>\n                      (option?.label ?? \"\").includes(input)\n                    }\n                    optionFilterProp=\"children\"\n                    showSearch\n                    onChange={(e) => {\n                      const temp = printProvider.find((item) => item.id === e);\n                      if (temp) {\n                        const printProvider = {\n                          name: temp.title,\n                          address:\n                            temp.location && temp.location?.address1\n                              ? temp.location?.address1\n                              : temp.location?.address2,\n                          id: e,\n                        };\n                        setProductAdd({\n                          ...productAdd,\n                          printProvider: printProvider,\n                          color: \"\",\n                          hexColor: \"\",\n                          sizes: [],\n                        });\n                      }\n                    }}\n                  >\n                    {printProvider.map((provider, index) => {\n                      return (\n                        <Select.Option value={provider.id}>\n                          <strong>{provider.title}</strong>{\" \"}\n                          {provider.location && provider.location?.address1\n                            ? provider.location?.address1\n                            : provider.location?.address2}{\" \"}\n                          {provider.location?.city}\n                        </Select.Option>\n                      );\n                    })}\n                  </Select>\n                </div>\n              </Col>\n              {productAdd?.printProvider && productAdd?.printProvider?.id ? (\n                <Col span={24}>\n                  <ChangeSize\n                    basePrice={productAdd?.price}\n                    id={productAdd.id}\n                    idProvider={productAdd?.printProvider?.id}\n                    setDataVariants={setProductAdd}\n                    variants={productAdd}\n                  />\n                </Col>\n              ) : (\n                <></>\n              )}\n            </Row>\n          </div>\n        </Modal>\n        <ModalSale\n          isOpen={isOnSale}\n          setOpen={setIsOnSale}\n          item={sale}\n          setItem={setSale}\n          handleSaleUpdate={handleSaleUpdate}\n        />\n      </Spin>\n    </div>\n  );\n}\n"],"sourceRoot":""}