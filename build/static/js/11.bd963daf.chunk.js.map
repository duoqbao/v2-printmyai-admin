{"version":3,"sources":["api/upload.js","components/UpLoad/index.js","api/events.js","components/CountTimer/index.js","pages/Events/index.js"],"names":["dataURItoBlob","dataURI","byteString","split","indexOf","atob","unescape","mimeString","ia","Uint8Array","length","i","charCodeAt","Blob","type","uploadImage","event","Promise","resolve","reject","Resizer","imageFileResizer","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","uri","formData","data","wrap","_context","prev","next","FormData","append","api","post","concat","API_URL","sent","t0","stop","_x","apply","arguments","isUrl","str","RegExp","test","UploadInput","props","setData","uploadFile","_props$title","title","_props$isInput","isInput","_useState","useState","_useState2","_slicedToArray","loading","setLoading","useEffect","uploadButton","_jsxs","children","_jsx","PlusOutlined","style","marginTop","Row","gutter","className","Col","span","hidden","Input","value","onChange","e","url","target","onChangeUrl","Upload","name","listType","showUploadList","beforeUpload","file","accept","Spin","spinning","width","height","backgroundImage","backgroundRepeat","backgroundSize","cursor","getEvents","get","update","body","put","getStores","updateStore","id","CountdownTimer","targetDate","calculateTimeRemaining","timeRemaining","setTimeRemaining","difference","Date","days","hours","minutes","seconds","Math","floor","intervalId","setInterval","clearInterval","Events","setEvent","_useState3","_useState4","getData","res","EventApi","handleUpdate","_ref2","_callee2","_context2","message","success","Card","bordered","bodyStyle","paddingTop","display","justifyContent","bannerImageUrl","expriredAt","position","top","description","Button","onClick","_objectSpread","TextArea","rows","then","catch","err","error","DatePicker","moment","date","dateString","format","disabledDate","current","endOf","showTime","defaultValue","placeholder"],"mappings":"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","file":"static/js/11.bd963daf.chunk.js","sourcesContent":["import api from \"axios\";\nimport { API_URL } from \"./index.js\";\nimport Resizer from \"react-image-file-resizer\";\nexport const dataURItoBlob = (dataURI) => {\n  var byteString;\n  if (dataURI.split(\",\")[0].indexOf(\"base64\") >= 0)\n    byteString = atob(dataURI.split(\",\")[1]);\n  else byteString = unescape(dataURI.split(\",\")[1]);\n\n  var mimeString = dataURI.split(\",\")[0].split(\":\")[1].split(\";\")[0];\n\n  var ia = new Uint8Array(byteString.length);\n  for (var i = 0; i < byteString.length; i++) {\n    ia[i] = byteString.charCodeAt(i);\n  }\n\n  return new Blob([ia], { type: mimeString });\n};\nexport const uploadImage = (event) => {\n  if (event) {\n    return new Promise((resolve, reject) => {\n      Resizer.imageFileResizer(\n        event, // the file from input\n        1920,\n        1080,\n        \"PNG\", // compress format WEBP, JPEG, PNG\n        90, // quality\n        0, // rotation\n        async (uri) => {\n          try {\n            let formData = new FormData();\n            const dataURI = dataURItoBlob(uri);\n            formData.append(\"file\", dataURI);\n            const data = await api.post(`${API_URL}/upload`, formData);\n            resolve(data.data);\n          } catch (err) {\n            reject(err);\n          }\n        },\n        \"base64\" //\n      );\n    });\n  }\n};\n","import React, { useState, useEffect } from \"react\";\nimport { Upload, Row, Col, Input, Spin } from \"antd\";\nimport { LoadingOutlined, PlusOutlined } from \"@ant-design/icons\";\nimport \"./index.scss\"\nfunction isUrl(str) {\n  const pattern = new RegExp(\n    \"^(https?:\\\\/\\\\/)?\" + // protocol\n      \"((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.)+[a-z]{2,}|\" + // domain name\n      \"((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))\" + // OR ip (v4) address\n      \"(\\\\:\\\\d+)?(\\\\/[-a-z\\\\d%_.~+]*)*\" + // port and path\n      \"(\\\\?[;&a-z\\\\d%_.~+=-]*)?\" + // query string\n      \"(\\\\#[-a-z\\\\d_]*)?$\",\n    \"i\"\n  ); // fragment locator\n  return !!pattern.test(str);\n}\nexport default function UploadInput(props) {\n  const { data, setData, uploadFile, title = \"Url\", isInput = false } = props;\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    // getDataById(id);\n    setLoading(false);\n  }, [data]);\n  const beforeUpload = (file) => {\n    setLoading(true);\n    uploadFile(file);\n  };\n  const uploadButton = (\n    <div>\n      <PlusOutlined />\n      <div\n        style={{\n          marginTop: 8,\n        }}\n      >\n        Upload\n      </div>\n    </div>\n  );\n  const onChangeUrl = (e) => {\n    const url = e.target.value;\n    setData(url);\n  };\n  return (\n    <Row gutter={[24, 24]} className=\"UploadInput\">\n      <Col span={12} hidden={isInput}>\n        <div className=\"input\">\n          <label>{title}</label>\n          <Input value={data} onChange={(e) => onChangeUrl(e)} />\n        </div>\n      </Col>\n      <Col span={isInput ? 24 : 12}>\n        <Upload\n          name=\"avatar\"\n          listType={data && isUrl(data) ? \"text\" : \"picture-card\"}\n          className=\"avatar-uploader\"\n          showUploadList={false}\n          beforeUpload={beforeUpload}\n          accept=\"image/*\"\n        >\n          <Spin spinning={loading}>\n            {data && isUrl(data) ? (\n              <div\n                className=\"card-credit img-hover\"\n                style={{\n                  width: \"20rem\",\n                  height: \"11em\",\n                  backgroundImage: `url(${data})`,\n                  backgroundRepeat: \"no-repeat\",\n                  backgroundSize: \"contain\",\n                  cursor: \"pointer\",\n                }}\n              />\n            ) : (\n              uploadButton\n            )}\n          </Spin>\n        </Upload>\n      </Col>\n    </Row>\n  );\n}\n","import api from \"api/index\";\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default {\n  getEvents: () => {\n    return api.get(`/ecommerc/event`);\n  },\n  update: (body) => {\n    return api.put(`/ecommerc/event`, body);\n  },\n  getStores: () => {\n    return api.get(`/ecommerc/event/get-stores`);\n  },\n  updateStore: (id) => {\n    return api.put(`/ecommerc/event/set-shop?shopId=${id}`);\n  },\n};\n","import React, { useEffect, useState } from \"react\";\nfunction CountdownTimer({ targetDate }) {\n  const [timeRemaining, setTimeRemaining] = useState(calculateTimeRemaining());\n\n  // Tính thời gian còn lại sau mỗi giây\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      setTimeRemaining(calculateTimeRemaining());\n    }, 1000);\n\n    return () => clearInterval(intervalId);\n  }, [targetDate]);\n\n  function calculateTimeRemaining() {\n    const difference = new Date(targetDate) - new Date();\n\n    if (difference < 0) {\n      return {\n        days: 0,\n        hours: 0,\n        minutes: 0,\n        seconds: 0,\n      };\n    }\n\n    const time = {\n      days: Math.floor(difference / (1000 * 60 * 60 * 24)),\n      hours: Math.floor((difference / (1000 * 60 * 60)) % 24),\n      minutes: Math.floor((difference / 1000 / 60) % 60),\n      seconds: Math.floor((difference / 1000) % 60),\n    };\n\n    return time;\n  }\n\n  // Hiển thị thời gian còn lại\n  return (\n    <div className=\"countdown-date\">\n      <div className=\"date\">\n        <span>{timeRemaining.days}</span>\n        <span>Day</span>\n      </div>\n      <div className=\"date\">\n        <span>{timeRemaining.hours}</span>\n        <span>Hours</span>\n      </div>\n      <div className=\"date\">\n        <span>{timeRemaining.minutes}</span>\n        <span>Minutes</span>\n      </div>\n      <div className=\"date\">\n        <span>{timeRemaining.seconds}</span>\n        <span>Seconds</span>\n      </div>\n    </div>\n  );\n}\n\nexport default CountdownTimer;\n","import React, { useEffect, useState } from \"react\";\nimport { Card, Col, Row, Input, DatePicker, Button, message, Spin } from \"antd\";\nimport EventApi from \"api/events\";\nimport moment from \"moment\";\nimport UploadInput from \"components/UpLoad/index\";\nimport { uploadImage } from \"api/upload\";\nimport \"./index.scss\";\nimport CountdownTimer from \"components/CountTimer\";\n\nexport default function Events() {\n  const [event, setEvent] = useState({});\n  const [loading, setLoading] = useState(false);\n  const getData = async () => {\n    setLoading(true);\n    try {\n      const res = await EventApi.getEvents();\n      setEvent(res);\n      setLoading(false);\n    } catch (error) {}\n  };\n  useEffect(() => {\n    getData();\n  }, []);\n  const beforeUpload = (e) => {\n    uploadImage(e)\n      .then((res) => {\n        setEvent({ ...event, bannerImageUrl: res });\n      })\n      .catch((err) => {\n        setEvent({ ...event, bannerImageUrl: \"\" });\n        message.error(\"Failed to upload image\");\n      });\n  };\n  const onChangeUrl = (e) => {\n    setEvent({ ...event, bannerImageUrl: e });\n  };\n  const onChangeDate = (date, dateString) => {\n    setEvent({ ...event, expriredAt: dateString });\n  };\n  const disabledDate = (current) => {\n    // Can not select days before today and today\n    return current && current < moment().endOf(\"day\");\n  };\n  const range = (start, end) => {\n    const result = [];\n    for (let i = start; i < end; i++) {\n      result.push(i);\n    }\n    return result;\n  };\n  const dateFormat = \"YYYY-MM-DD HH:mm:ss\";\n  const handleUpdate = async () => {\n    try {\n      const res = await EventApi.update(event);\n      message.success(\"Updated event\");\n    } catch (error) {}\n  };\n  return (\n    <div className=\"events layout-content\">\n      {\" \"}\n      <Spin spinning={loading}>\n        <Row gutter={[24, 24]}>\n          <Col span={24} className=\"mb-24\">\n            <Card\n              className=\"header-solid h-full\"\n              bordered={false}\n              title={[<h6 className=\"font-semibold m-0\">Events Details</h6>]}\n              bodyStyle={{ paddingTop: \"0\" }}\n            >\n              <div\n                style={{\n                  display: \"flex\",\n                  justifyContent: \"center\",\n                  width: \"100%\",\n                }}\n              >\n                <Col span={12}>\n                  <Card\n                    className=\"header-solid h-full event-details\"\n                    bordered={true}\n                    bodyStyle={{ paddingTop: \"0\" }}\n                    style={{\n                      height: \"400px\",\n                      backgroundImage: `url(${event.bannerImageUrl})`,\n                    }}\n                  >\n                    <CountdownTimer targetDate={event.expriredAt} />\n                    <div style={{ position: \"relative\", top: \"40%\" }}>\n                      <Card>\n                        <div className=\"event-item\">\n                          <div className=\"event-name\">{event.description}</div>\n                          <div className=\"event-description\"></div>\n                        </div>\n                      </Card>\n                    </div>\n                  </Card>\n                </Col>\n              </div>\n            </Card>\n          </Col>\n        </Row>\n        <Row gutter={[24, 24]}>\n          <Col span={24}>\n            <div style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\n              <Button onClick={() => handleUpdate()} type=\"primary\">\n                Update\n              </Button>\n            </div>\n          </Col>\n          <Col span={24}>\n            <Card\n              className=\"header-solid h-full\"\n              bordered={false}\n              title={[<h6 className=\"font-semibold m-0\">Events Form</h6>]}\n              bodyStyle={{ paddingTop: \"0\" }}\n            >\n              <div>\n                <Row gutter={[24, 24]}>\n                  <Col span={12}>\n                    <div className=\"input\">\n                      <label>Name</label>\n                      <Input\n                        value={event.name}\n                        onChange={(e) => {\n                          const value = e.target.value;\n                          setEvent({ ...event, name: value });\n                        }}\n                      />\n                    </div>\n                  </Col>\n                  <Col span={12}>\n                    <div className=\"input\">\n                      <label>Description</label>\n                      <Input.TextArea\n                        value={event.description}\n                        rows={5}\n                        onChange={(e) => {\n                          const value = e.target.value;\n                          setEvent({ ...event, description: value });\n                        }}\n                      />\n                    </div>\n                  </Col>\n                  <Col span={24}>\n                    <UploadInput\n                      data={event.bannerImageUrl}\n                      setData={(e) => onChangeUrl(e)}\n                      uploadFile={beforeUpload}\n                    />\n                  </Col>\n                  <Col span={12}>\n                    <div className=\"input\">\n                      <label>Exprired</label>\n                      <DatePicker\n                        value={moment(event.expriredAt, dateFormat)}\n                        onChange={onChangeDate}\n                        format=\"YYYY-MM-DD HH:mm:ss\"\n                        disabledDate={disabledDate}\n                        //   disabledTime={disabledDateTime}\n                        showTime={{\n                          defaultValue: moment(\"00:00:00\", \"HH:mm:ss\"),\n                        }}\n                        placeholder=\"Select event end date\"\n                      />\n                    </div>\n                  </Col>\n                  {/* <Col span={12}>\n                  <div className=\"input\">\n                    <label>Active</label>\n                    <Switch\n                      checked={event.active}\n                      onChange={(e) => {\n                        setEvent({ ...event, active: e });\n                      }}\n                    />\n                  </div>\n                </Col> */}\n                </Row>\n              </div>\n            </Card>\n          </Col>\n        </Row>\n      </Spin>\n    </div>\n  );\n}\n"],"sourceRoot":""}