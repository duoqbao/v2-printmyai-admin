{"version":3,"sources":["api/events.js","api/setting.js","pages/Settings/ChangePassword.js","pages/Settings/index.js"],"names":["getEvents","api","get","update","body","put","getStores","updateStore","id","concat","sku","secretKey","_ref","base_tune_id","branch","post","formItemLayout","labelCol","xs","span","sm","wrapperCol","ChangePassword","onClose","_Form$useForm","Form","useForm","form","_slicedToArray","onFinish","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","e","_err$response","_err$response$data","wrap","_context","prev","next","API","_objectSpread","message","success","t0","error","JSON","stringify","response","data","stop","_x","apply","arguments","_jsx","style","padding","children","_jsxs","layout","Item","name","label","rules","required","Input","Password","dependencies","_ref3","getFieldValue","validator","_","value","Promise","reject","Error","resolve","display","justifyContent","width","Button","htmlType","type","Settings","_useState","useState","_useState2","menu","setMenu","_useState3","_useState4","itemMenu","setItemMenu","_useState5","_useState6","loading","setLoading","_useState7","_useState8","shopId","setShopId","_useState9","_useState10","dataShops","setDataShops","_useState11","_useState12","loadingTable","setLoadingTable","getData","res","ApiSetting","sent","getStore","_callee2","event","store","_context2","ApiEvent","useEffect","updateKey","_callee3","_context3","updateAstriaConfig","handleUpdateSelectStore","_ref4","_callee4","item","_context4","columns","title","dataIndex","key","render","Checkbox","checked","onChange","_useState13","_useState14","tunes","setTunes","_useState15","_useState16","astriaLoading","setAstriaLoading","_useState17","_useState18","astriaConfig","setAstriaConfig","getListTunes","_ref5","_callee5","_menu$filter$","_context5","filter","i","metadata","_ref6","_callee6","_context6","_useState19","_useState20","onChangePassword","setOnChangePassword","Modal","open","onCancel","footer","Spin","spinning","Card","bordered","className","alignItems","Typography","Title","level","onClick","Row","gutter","Col","map","index","_id","hidden","marginBottom","includes","target","Table","dataSource","pagination","_Fragment","margin","Select","minWidth","defaultValue","_tunes$filter$","_tunes$filter$2","Option"],"mappings":"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","file":"static/js/17.8f1ef215.chunk.js","sourcesContent":["import api from \"api/index\";\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default {\n  getEvents: () => {\n    return api.get(`/ecommerc/event`);\n  },\n  update: (body) => {\n    return api.put(`/ecommerc/event`, body);\n  },\n  getStores: () => {\n    return api.get(`/ecommerc/event/get-stores`);\n  },\n  updateStore: (id) => {\n    return api.put(`/ecommerc/event/set-shop?shopId=${id}`);\n  },\n};\n","import api from \"api/index\";\nexport default {\n  get3dServices: () => {\n    return api.get(\"/3d-services\");\n  },\n  update3dServices: (sku, secretKey) => {\n    return api.put(`/3d-services/${sku}`, { secretKey });\n  },\n  getListTunes: () => {\n    return api.get(`/3d-services/astria-tunes`);\n  },\n  updateAstriaConfig: ({ base_tune_id, branch }) => {\n    return api.post(`/3d-services/astria-config`, { base_tune_id, branch });\n  },\n};\n","import React from \"react\";\nimport { Form, Input, Button, message } from \"antd\";\nimport API from \"../../api/index\";\nconst formItemLayout = {\n  labelCol: {\n    xs: {\n      span: 24,\n    },\n    sm: {\n      span: 8,\n    },\n  },\n  wrapperCol: {\n    xs: {\n      span: 24,\n    },\n    sm: {\n      span: 16,\n    },\n  },\n};\nexport default function ChangePassword({ onClose }) {\n  const [form] = Form.useForm();\n\n  const onFinish = async (e) => {\n    try {\n      await API.post(\"/auth/change-password\", { ...e });\n      message.success(\"Success!\");\n      onClose();\n    } catch (err) {\n      message.error(JSON.stringify(err.response?.data?.message));\n    }\n  };\n\n  return (\n    <div style={{ padding: 20 }}>\n      <Form\n        form={form}\n        {...formItemLayout}\n        layout=\"vertical\"\n        onFinish={onFinish}\n      >\n        <Form.Item\n          name=\"old_password\"\n          label=\"Old Password\"\n          rules={[\n            {\n              required: true,\n              message: \"Please input your password!\",\n            },\n          ]}\n        >\n          <Input.Password />\n        </Form.Item>\n        <Form.Item\n          name=\"password\"\n          label=\"Password\"\n          rules={[\n            {\n              required: true,\n              message: \"Please input your password!\",\n            },\n          ]}\n        >\n          <Input.Password />\n        </Form.Item>\n        <Form.Item\n          name=\"confirm\"\n          label=\"Confirm Password\"\n          dependencies={[\"password\"]}\n          rules={[\n            {\n              required: true,\n              message: \"Please confirm your password!\",\n            },\n            ({ getFieldValue }) => ({\n              validator(_, value) {\n                if (!value || getFieldValue(\"password\") === value) {\n                  return Promise.resolve();\n                }\n                return Promise.reject(\n                  new Error(\"The two passwords that you entered do not match!\")\n                );\n              },\n            }),\n          ]}\n        >\n          <Input.Password />\n        </Form.Item>\n        <Form.Item\n          style={{ display: \"flex\", justifyContent: \"center\", width: \"100%\" }}\n        >\n          <Button htmlType=\"submit\" type=\"primary\">\n            Confirm\n          </Button>\n        </Form.Item>\n      </Form>\n    </div>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport {\n  Row,\n  Col,\n  Card,\n  Button,\n  Input,\n  message,\n  Spin,\n  Table,\n  Checkbox,\n  Select,\n  Typography,\n  Modal,\n} from \"antd\";\nimport ApiSetting from \"api/setting\";\nimport ApiEvent from \"api/events\";\nimport \"./index.scss\";\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport ChangePassword from \"./ChangePassword\";\nexport default function Settings() {\n  // const menu = [\n  //   { value: \"api\", text: \"API Key\" },\n  //   { value: \"changePassword\", text: \"Change password\" },\n  // ];\n  const [menu, setMenu] = useState([]);\n  const [itemMenu, setItemMenu] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [shopId, setShopId] = useState(\"\");\n  const [dataShops, setDataShops] = useState([]);\n  const [loadingTable, setLoadingTable] = useState(false);\n  const getData = async () => {\n    setLoading(true);\n    try {\n      const res = await ApiSetting.get3dServices();\n      setMenu(res);\n      setLoading(false);\n    } catch (error) {\n      setLoading(false);\n    }\n  };\n  const getStore = async () => {\n    setLoadingTable(true);\n    try {\n      const event = await ApiEvent.getEvents();\n      setShopId(event.shopId);\n      const store = await ApiEvent.getStores();\n      setDataShops(store);\n      setLoadingTable(false);\n    } catch (error) {}\n  };\n  useEffect(() => {\n    getData();\n  }, []);\n  const updateKey = async () => {\n    try {\n      const res = await ApiSetting.update3dServices(\n        itemMenu.sku,\n        itemMenu.secretKey\n      );\n      message.success(\"Updated successfully\");\n      getData();\n      if (itemMenu.sku === \"printify\") {\n        getStore();\n      }\n      if (itemMenu.sku == \"astria\") {\n        updateAstriaConfig();\n      }\n    } catch (error) {}\n  };\n  const handleUpdateSelectStore = async (item) => {\n    try {\n      const res = await ApiEvent.updateStore(item);\n      setShopId(item);\n    } catch (error) {}\n  };\n  const columns = [\n    {\n      title: \"\",\n      dataIndex: \"id\",\n      key: \"id\",\n      render: (item) => {\n        return (\n          <Checkbox\n            checked={item === shopId}\n            onChange={(e) => handleUpdateSelectStore(item)}\n          />\n        );\n      },\n    },\n    {\n      title: \"Name Shope\",\n      dataIndex: \"title\",\n      key: \"title\",\n    },\n    {\n      title: \"Sales Changes\",\n      dataIndex: \"sales_channel\",\n      key: \"sales_channel\",\n    },\n  ];\n\n  ///\n  const [tunes, setTunes] = useState([]);\n  const branch = [\"sd15\", \"sd21\", \"protogen34\", \"openjourney2\"];\n  const [astriaLoading, setAstriaLoading] = useState(false);\n  const [astriaConfig, setAstriaConfig] = useState({\n    base_tune_id: \"\",\n    branch: \"\",\n  });\n  const getListTunes = async () => {\n    setAstriaLoading(true);\n    const data = await ApiSetting.getListTunes();\n    setTunes(data);\n    setAstriaConfig(menu.filter((i) => i.sku == \"astria\")[0]?.metadata);\n    setAstriaLoading(false);\n  };\n\n  const updateAstriaConfig = async () => {\n    const data = await ApiSetting.updateAstriaConfig({ ...astriaConfig });\n  };\n  useEffect(() => {\n    if (itemMenu.sku == \"astria\") {\n      getListTunes();\n    }\n  }, [itemMenu]);\n\n  const [onChangePassword, setOnChangePassword] = useState(false);\n  return (\n    <div>\n      <Modal\n        open={onChangePassword}\n        onCancel={() => {\n          setOnChangePassword(false);\n        }}\n        footer={null}\n      >\n        <ChangePassword onClose={() => setOnChangePassword(false)} />\n      </Modal>\n      <Spin spinning={loading}>\n        <Card\n          bordered={false}\n          className=\"criclebox tablespace mb-24 settings\"\n          title={\n            <div\n              style={{\n                display: \"flex\",\n                justifyContent: \"space-between\",\n                alignItems: \"center\",\n              }}\n            >\n              <Typography.Title level={4}>Settings</Typography.Title>\n              <Button onClick={() => setOnChangePassword(true)}>\n                Change Password\n              </Button>\n            </div>\n          }\n        >\n          <div style={{ padding: 12 }}>\n            <Row gutter={[12, 12]}>\n              <Col span={8}>\n                <ul className=\"menu-setting\">\n                  {menu.map((item, index) => {\n                    return (\n                      <li\n                        className={`item ${\n                          itemMenu._id === item._id ? \"active\" : \"\"\n                        }`}\n                        key={index}\n                        onClick={() => {\n                          if (item.sku === \"printify\") {\n                            getStore();\n                          }\n                          setItemMenu(item);\n                        }}\n                      >\n                        {item.name}\n                      </li>\n                    );\n                  })}\n                </ul>\n              </Col>\n              <Col span={16}>\n                <Row hidden={!itemMenu._id}>\n                  <Col span={24}>\n                    <div style={{ padding: \" 0 24px\" }}>\n                      <div\n                        style={{\n                          display: \"flex\",\n                          justifyContent: \"flex-end\",\n                          marginBottom: 24,\n                        }}\n                      >\n                        <Button type=\"primary\" onClick={() => updateKey()}>\n                          Update\n                        </Button>\n                      </div>\n                      {![\"printify\", \"astria\"].includes(itemMenu.sku) && (\n                        <div className=\"input\">\n                          <label>Key : {itemMenu.name}</label>\n                          <Input.Password\n                            value={itemMenu.secretKey}\n                            onChange={(e) => {\n                              const value = e.target.value;\n                              setItemMenu({ ...itemMenu, secretKey: value });\n                            }}\n                          />\n                        </div>\n                      )}\n                      <div\n                        style={{ padding: 24 }}\n                        hidden={itemMenu.sku !== \"printify\"}\n                      >\n                        <Table\n                          columns={columns}\n                          dataSource={dataShops}\n                          pagination={false}\n                          loading={loadingTable}\n                        />\n                      </div>\n\n                      <div\n                        style={{\n                          padding: 24,\n                        }}\n                        hidden={itemMenu.sku !== \"astria\"}\n                      >\n                        <div\n                          style={{\n                            display: \"flex\",\n                            justifyContent: \"space-between\",\n                          }}\n                        >\n                          {astriaLoading ? (\n                            <Spin />\n                          ) : (\n                            <>\n                              <div style={{ margin: 5 }}>\n                                <Typography.Title level={5}>\n                                  Base tune\n                                </Typography.Title>\n                                <Select\n                                  onChange={(e) => {\n                                    setAstriaConfig({\n                                      ...astriaConfig,\n                                      base_tune_id: e,\n                                    });\n                                  }}\n                                  style={{ minWidth: 400 }}\n                                  defaultValue={() =>\n                                    `${\n                                      tunes.filter(\n                                        (i) =>\n                                          i.id == astriaConfig?.base_tune_id\n                                      )[0]?.title\n                                    } - ${\n                                      tunes.filter(\n                                        (i) =>\n                                          i.id == astriaConfig?.base_tune_id\n                                      )[0]?.id\n                                    }`\n                                  }\n                                >\n                                  {tunes?.map((i) => (\n                                    <Select.Option\n                                      value={i.id}\n                                      title={i.title}\n                                      key={i.id}\n                                    >\n                                      {i.title} - {i.id}\n                                    </Select.Option>\n                                  ))}\n                                </Select>\n                              </div>\n                              <div style={{ margin: 5 }}>\n                                <Typography.Title level={5}>\n                                  Model\n                                </Typography.Title>\n                                <Select\n                                  style={{ minWidth: 200 }}\n                                  onChange={(e) => {\n                                    setAstriaConfig({\n                                      ...astriaConfig,\n                                      branch: e,\n                                    });\n                                  }}\n                                  value={astriaConfig?.branch}\n                                >\n                                  {branch?.map((i) => (\n                                    <Select.Option value={i}>{i}</Select.Option>\n                                  ))}\n                                </Select>\n                              </div>\n                            </>\n                          )}\n                        </div>\n                        {/* <div\n                          style={{\n                            display: \"flex\",\n                            justifyContent: \"center\",\n                            marginTop: 20,\n                          }}\n                        >\n                          <Button type=\"primary\">Update Astria config</Button>\n                        </div> */}\n                      </div>\n                    </div>\n                  </Col>\n                </Row>\n              </Col>\n            </Row>\n          </div>\n        </Card>\n      </Spin>\n    </div>\n  );\n}\n"],"sourceRoot":""}